{"version":3,"sources":["Hoc/withAuthRedirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Messages/Messages.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["mapStateToPropsIsAuth","state","isAuth","authHeader","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","DialogItem","path","id","className","classes","dialogItem","name","Messages","message","maxLength50","maxLengthCreator","ReduxAddNewMessageForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","dialogElements","dialogsPage","map","person","messageElements","messageItem","dialogs","dialogItems","messages","values","addMessage","newMessageText","compose","dialogsReducer","dispatch","action","addNewMessageCreator"],"mappings":"qNAIIA,EAAwB,SAACC,GACzB,MAAO,CACHC,OAAQD,EAAME,WAAWD,SAIpBE,EAAmB,SAACC,GAAe,IACtCC,EADqC,4JAEvC,WACI,OAAIC,KAAKC,MAAMN,OACR,cAACG,EAAD,eAAeE,KAAKC,QADG,cAAC,IAAD,CAAUC,GAAI,eAHT,GACXC,IAAML,WAStC,OAF4BM,YAAQX,EAARW,CAA+BL,K,0CCjB/DM,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,SAAW,4B,mGCW5FC,EATI,SAACN,GAClB,IAAIO,EAAO,YAAcP,EAAMQ,GAC7B,OACE,qBAAKC,UAAWC,IAAQC,WAAxB,SACI,cAAC,IAAD,CAASV,GAAIM,EAAMC,GAAIR,EAAMQ,GAA7B,SAAkCR,EAAMY,U,oCCGnCC,EARE,SAACb,GACd,OACE,qBAAKS,UAAWC,IAAQI,QAAxB,SACKd,EAAMc,W,wCCGbC,EAAcC,YAAiB,IAe7BC,EAAyBC,YAAU,CAACC,KAAM,4BAAjBD,EAbL,SAAClB,GACvB,OACI,uBAAMoB,SAAUpB,EAAMqB,aAAtB,UACG,8BACG,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUC,SAAU,CAACC,IAAUX,GAAcH,KAAK,iBAAiBe,YAAY,0BAEpG,8BACG,uDAgCCC,EAxBC,SAAC5B,GACb,IAAI6B,EAAiB7B,EAAM8B,YAAYnB,WACtCoB,KAAI,SAACC,GAAD,OAAY,cAAC,EAAD,CAAYpB,KAAMoB,EAAOpB,KAAMJ,GAAIwB,EAAOxB,QAEvDyB,EAAkBjC,EAAM8B,YAAYI,YACvCH,KAAI,SAACjB,GAAD,OAAa,cAAC,EAAD,CAAUA,QAASA,EAAQA,aAM7C,OACE,sBAAKL,UAAWC,IAAQyB,QAAxB,UACI,qBAAK1B,UAAWC,IAAQ0B,YAAxB,SACKP,IAEL,qBAAKpB,UAAWC,IAAQ2B,SAAxB,SACKJ,IAEL,cAAChB,EAAD,CAAwBG,SAZX,SAACkB,GAChBtC,EAAMuC,WAAWD,EAAOE,uB,kCCPjBC,sBACXtC,aApBkB,SAACV,GACnB,MAAO,CACHqC,YAAarC,EAAMiD,mBAIF,SAACC,GACtB,MAAO,CACHJ,WAAY,SAACC,GACT,IAAII,EAASC,YAAqBL,GAClCG,EAASC,QAWjBhD,IAFW6C,CAGTb","file":"static/js/4.0e446f26.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsIsAuth = (state) => {\r\n    return {\r\n        isAuth: state.authHeader.isAuth\r\n    }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to={\"/login\"} />;\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let connectedAuthRedirect = connect(mapStateToPropsIsAuth)(RedirectComponent);\r\n\r\n    return connectedAuthRedirect;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1-SWu\",\"dialogItems\":\"Dialogs_dialogItems__EZPvm\",\"messages\":\"Dialogs_messages__aofUI\"};","import classes from \"./DialogItem.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n  let path = \"/dialogs/\" + props.id;\r\n    return (\r\n      <div className={classes.dialogItem}>\r\n          <NavLink to={path} id={props.id}>{props.name}</NavLink>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import classes from \"./Messages.module.css\";\r\n\r\nconst Messages = (props) => {\r\n    return (\r\n      <div className={classes.message}>\r\n          {props.message}\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Messages;","import DialogItem from \"./DialogItem/DialogItem\";\r\nimport classes from \"./Dialogs.module.css\";\r\nimport Messages from \"./Messages/Messages\";\r\nimport React from \"react\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport { Textarea } from \"../../utills/formsControls/formsControls\";\r\nimport { required, maxLengthCreator } from \"../../utills/validators/validators\";\r\n\r\nlet maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddNewMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n           <div>\r\n              <Field component={Textarea} validate={[required, maxLength50]} name=\"newMessageText\" placeholder=\"Enter your message!\" />\r\n           </div>\r\n           <div>\r\n              <button>Send data</button>\r\n           </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ReduxAddNewMessageForm = reduxForm({form: \"DialogsAddNewMessageForm\"})(AddNewMessageForm);\r\n\r\nconst Dialogs = (props) => {\r\n    let dialogElements = props.dialogsPage.dialogItem\r\n    .map((person) => <DialogItem name={person.name} id={person.id} />);\r\n\r\n    let messageElements = props.dialogsPage.messageItem\r\n    .map((message) => <Messages message={message.message} />);\r\n\r\n    let onAddMessage = (values) => {\r\n        props.addMessage(values.newMessageText);\r\n    };\r\n\r\n    return (\r\n      <div className={classes.dialogs}>\r\n          <div className={classes.dialogItems}>\r\n              {dialogElements}\r\n          </div>\r\n          <div className={classes.messages}>\r\n              {messageElements}\r\n          </div>\r\n          <ReduxAddNewMessageForm onSubmit={onAddMessage} />\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import Dialogs from \"./Dialogs\";\r\nimport { addNewMessageCreator } from \"../../Redux/dialogsReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../Hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsReducer\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (newMessageText) => {\r\n            let action = addNewMessageCreator(newMessageText);\r\n            dispatch(action);\r\n        }\r\n    }\r\n}\r\n\r\n// let authRedirectComponent = withAuthRedirect(Dialogs);\r\n\r\n// const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(authRedirectComponent);\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n    )(Dialogs);"],"sourceRoot":""}