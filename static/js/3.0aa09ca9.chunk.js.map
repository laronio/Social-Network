{"version":3,"sources":["Hoc/withAuthRedirect.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusClasses.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/avatar.jpg","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsIsAuth","state","isAuth","authHeader","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","ProfileStatus","editMode","status","activateEditMode","setState","deactivateEditMode","updateUserStatus","onChangeStatus","e","currentTarget","value","prevProps","prevState","onDoubleClick","onChange","autoFocus","onBlur","ProfileInfo","profile","className","classes","profileInfo","descriptionBlock","src","photos","large","alt","Preloader","Post","post","post_img","avatar","message","post_likes","likes","maxLength10","maxLengthCreator","ReduxAddNewPostForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","validate","required","MyPosts","memo","console","log","postElements","postItem","map","postsBlock","values","addPost","newPostText","posts","MyPostsContainer","profileReducer","dispatch","action","addNewPostCreator","Profile","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getUserStatus","selectedUserProfile","compose","withRouter"],"mappings":"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","file":"static/js/3.0aa09ca9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsIsAuth = (state) => {\r\n    return {\r\n        isAuth: state.authHeader.isAuth\r\n    }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to={\"/login\"} />;\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let connectedAuthRedirect = connect(mapStateToPropsIsAuth)(RedirectComponent);\r\n\r\n    return connectedAuthRedirect;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo_img\":\"ProfileInfo_profileInfo_img__1kscW\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3rvx9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3IiAB\",\"posts\":\"MyPosts_posts__2PiDF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post_img\":\"Post_post_img__K2wKv\"};","import React from \"react\";\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n  state = {\r\n    editMode: false,\r\n    status: this.props.status\r\n  }\r\n\r\n  activateEditMode = () => {\r\n    this.setState({\r\n      editMode: true\r\n    })\r\n  }\r\n\r\n  deactivateEditMode = () => {\r\n    this.setState({\r\n      editMode: false\r\n    });\r\n    this.props.updateUserStatus(this.state.status);\r\n  }\r\n\r\n  onChangeStatus = (e) => {\r\n    this.setState({\r\n      status: e.currentTarget.value\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if(this.props.status !== prevProps.status) {\r\n      this.setState({\r\n        status: this.props.status\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n          {!this.state.editMode && \r\n           <div>\r\n            <span onDoubleClick={this.activateEditMode} >{this.props.status || \"------------\"}</span>\r\n          </div>}\r\n          {this.state.editMode && \r\n           <div>\r\n            <input onChange={this.onChangeStatus} autoFocus={true} value={this.state.status} onBlur={this.deactivateEditMode} />\r\n          </div>}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ProfileStatus;","import classes from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../Users/preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatusClasses\";\r\n\r\nconst ProfileInfo = ({profile, status, updateUserStatus}) => {\r\n    if(!profile) {\r\n        return <Preloader />\r\n    }\r\n    return (\r\n      <div className={classes.profileInfo}>\r\n          <div className={classes.descriptionBlock}>\r\n               <img src={profile.photos.large} alt=\"big\" />\r\n               <ProfileStatus status={status} updateUserStatus={updateUserStatus} />\r\n          </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","export default __webpack_public_path__ + \"static/media/avatar.bf0da7af.jpg\";","import classes from \"./Post.module.css\";\r\nimport avatar from \"./avatar.jpg\";\r\n\r\nconst Post = (props) => {\r\n    return (\r\n      <div className={classes.post}>\r\n        <img className={classes.post_img} src={avatar} alt=\"avatar\" />\r\n        {props.message}\r\n        <div>\r\n            <span className={classes.post_likes}>{props.likes}</span>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport classes from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport { Field } from \"redux-form\";\r\nimport { required, maxLengthCreator } from \"../../../utills/validators/validators\";\r\nimport { Textarea } from \"../../../utills/formsControls/formsControls\";\r\n\r\nlet maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field component={Textarea} name=\"newPostText\" validate={[required, maxLength10]} />\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst ReduxAddNewPostForm = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm);\r\n\r\nconst MyPosts = React.memo((props) => {\r\n  console.log(\"Render!\")\r\n  let postElements = props.postItem.map((post) => <Post message={post.message} likes={post.likes} />)\r\n\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n  }\r\n\r\n    return (\r\n      <div className={classes.postsBlock}>\r\n          <h3>My posts</h3>\r\n          <ReduxAddNewPostForm onSubmit={onAddPost} />\r\n          <div className={classes.posts}>\r\n            {postElements}\r\n          </div>\r\n      </div>\r\n    )\r\n})\r\n\r\nexport default MyPosts;","import MyPosts from \"./MyPosts\";\r\nimport { addNewPostCreator} from \"../../../Redux/profileReducer\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    newPostText: state.profileReducer.newPostText,\r\n    postItem: state.profileReducer.postItem\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      let action = addNewPostCreator(newPostText);\r\n      dispatch(action);\r\n    }\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import classes from \"./Profile.module.css\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n      <div className={classes.profile}>\r\n          <ProfileInfo profile={props.profile} status={props.status} updateUserStatus={props.updateUserStatus} />\r\n          <MyPostsContainer />\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { getUserProfile, getUserStatus, updateUserStatus } from \"../../Redux/profileReducer\";\r\nimport { connect } from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport { withAuthRedirect } from \"../../Hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n      let userId = this.props.match.params.userId;\r\n      if(!userId) {\r\n        userId = this.props.authorizedUserId;\r\n        if(!userId) {\r\n          this.props.history.push(\"/login\");\r\n        }\r\n      }\r\n      this.props.getUserProfile(userId);\r\n      this.props.getUserStatus(userId);\r\n    }\r\n    render() {\r\n      return (\r\n        <div>\r\n            <Profile {...this.props} profile={this.props.selectedUserProfile} status={this.props.status} updateUserStatus={this.props.updateUserStatus} />\r\n        </div>\r\n      )\r\n    }\r\n}\r\n\r\n// let authRedirectComponent = withAuthRedirect(ProfileContainer);\r\n\r\nlet mapStateToProps = (state) => ({\r\n  selectedUserProfile: state.profileReducer.selectedUserProfile,\r\n  status: state.profileReducer.status,\r\n  authorizedUserId: state.authHeader.userId,\r\n  isAuth: state.authHeader.isAuth\r\n})\r\n\r\n// let getNewIdFunctionProfileContainer = withRouter(authRedirectComponent);\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {getUserProfile, getUserStatus, updateUserStatus}),\r\n  withRouter\r\n)(ProfileContainer);\r\n// connect(mapStateToProps, {getUserProfile})(getNewIdFunctionProfileContainer);"],"sourceRoot":""}